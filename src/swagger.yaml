openapi: 3.0.0
servers:
  - url: 'http://ec2-3-108-178-123.ap-south-1.compute.amazonaws.com:3000/api'
#  - url: 'http://localhost:3000/api'
info:
  version: 1.0.0
  title: Unext API Store
tags:
  # - name: Activity
  #   description: Perform Different operations on Activities 
  - name: User
    description: Perform Different operation on Users
paths:
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get All Users
      description: ''
      operationId: Get User
      responses:
        '200':
          description: User Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post: 
      tags:
        - User
      summary: Create New User
      description: ''
      operationId: create User
      responses:
        '200':
          description: User Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  description: "User First Name"
                  type: string
                  required: true
                lastName:
                  description: "User Last Name"
                  type: string
                  required: true
                userName:
                  description: "User Last Name"
                  type: string
                  required: true
                email:
                  description: "User Email"
                  type: string
                  required: true
                mobileNumber:
                  description: "User Mobile Number"
                  type: number
                  required: true
                password:
                  description: "Password"
                  type: string
        required: true
  /authn/token:
    post:
      tags:
        - Auth
      summary: Get Access and Id Token
      description: ''
      operationId: Get Access Token
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: successful operation
          $ref: '#/components/resonses/UnauthorizedError'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  description: password
                  type: string
                  required: true
                userName :
                  description: user name
                  type: string
                  required: true
        required: true

  /users/me/changePassword:
    post:
      tags:
        - User
      security:
        - bearerAuth: []
      summary: To Change pasword
      description: ''
      operationId: Change Password
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: successful operation
          $ref: '#/components/resonses/UnauthorizedError'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  description: password
                  type: string
                  required: true
                newPassword:
                  description: new password
                  type: string
                  required: true
        required: true
  
  /users/me:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      Summary: Get User Info By access Token
      description: It Shows user info of access token
      operationId: getUserInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
        '401':
          description: Un-Authorized Error
          $ref: '#/components/responses/UnauthorizedError'
  /authn/refresh-token:
    post:
      tags:
        - Auth
      summary: Renew Token
      description: ''
      operationId: Get Refresh Token
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: successful operation
          $ref: '#/components/resonses/UnauthorizedError'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  description: Access Token
                  type: string
                  required: true
                refresh_token:
                  description: Refresh Token
                  type: string
                  required: true
        required: true
  /users/bulk:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Create  Users In bulk
      description: ''
      operationId: create users in bulk
      responses:
        '200':
          description: User Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  firstName:
                    description: "User First Name"
                    type: string
                    required: true
                  userName:
                    description: "User First Name"
                    type: string
                    required: true
                  lastName:
                    description: "User Last Name"
                    type: string
                    required: true
                  email: 
                    description: "User Email"
                    type: string
                    required: true
                  mobileNumber:
                    description: "User Mobile Number"
                    type: number
                    required: true
                  password:
                    description: "Password"
                    type: string
        required: true

components:
  securitySchemes:
      basicAuth:
        type: http
        scheme: basic
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    
# security:
#   - basicAuth: []
#   - bearerAuth: []
requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    Activity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
      description: Activity object that needs to be added to the store
      required: true

schemas:
    Activity:
      title: Activity
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          requred: true
        title:
          type: string
        dueDate:
          type: string
          example: doggie
        completed:
          type: boolean
    User:
      title: User
      type: object
      required: true
      properties:
        firstName:
          type: string
          requred: true
        lastName:
          type: string
        email:
          type: string
        mobileNumber:
          type: number
        password:
          type: string
responses:
  UnauthorizedError: missing or invalid access token


        
